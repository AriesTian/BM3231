

#ifndef __command_table_h__
#define __command_table_h__

#define	DATA_SN 			0x01
#define SDP_PSM 			0x0001
#define SDP_HID_CONTROL 	0x0011
#define SDP_HID_INTERRUPT 	0x0013
#define SDP_RFCOMM 			0x0003

#define UUID_SDP				0x0001 //standard define
#define UUID_RFCOMM				0x0003
#define UUID_HID				0x0011
#define UUID_L2CAP				0x0100
#define UUID_SPP				0x1101
#define UUID_PNPi				0x1200

#define SDP_DestinationID			0x0055  //self define
#define HIDControl_DestinationID	0x0056
#define HIDInterrupt_DestinationID	0x0057
#define RFCOMM_DestinationID		0x0058


const unsigned char Com_Table_Reset[] = 
{0x01, 0x03, 0x0c, 0x00};

const unsigned char Com_Table_ReadBufferSize[] = 
{0x01, 0x05, 0x10, 0x00};

const unsigned char Com_Table_WriteScanEnable[] = 
{0x01, 0x1a, 0x0c, 0x01, 0x03};

const unsigned char Com_Table_WriteScanEnable_poweron[] =
{0X01,0x1a, 0x0c, 0x01, 0x02};

const unsigned char Com_Table_WriteScanEnable_DisableAll[] =
{0X01,0x1a, 0x0c, 0x01, 0x00};

const unsigned char Com_Table_WriteConectionAcceptTimeout[] =
{0X01,0x16, 0x0c, 0x02, 0x80, 0x3e};    //10s

const unsigned char Com_Table_WritePageTimeout[] = 
{0x01, 0x18, 0x0c, 0x02, 0x80, 0x3e};

const unsigned char Com_Table_ReadBDAddress[] = 
{0x01, 0x09, 0x10, 0x00};

const unsigned char Com_Table_Inquiry[] = 
{0x01, 0x01, 0x04, 0x05, 0x33, 0x8b, 0x9e, 0x06, 0x00};

const unsigned char Com_Table_SetEventFilter[] = 
{0x01, 0x05, 0x0c, 0x03, 0x02, 0x00, 0x02};

const unsigned char Com_Table_ReadLocalVersionInformation[] = 
{0x01, 0x01, 0x10, 0x00};

const unsigned char Com_Table_ReadLocalSupportedCommands[] = 
{0x01, 0x02, 0x10, 0x00};

const unsigned char Com_Table_ReadLocalSupportedFeatures[] = 
{0x01, 0x03, 0x10, 0x00};

const unsigned char Com_Table_ReadClassOfDevice[] = 
{0X01, 0x23, 0X0C, 0X00};

const unsigned char Com_Table_WriteClassOfDevice[] = 
{0X01, 0x24, 0x0c, 0x03, 0x00, 0x1f, 0x00};

const unsigned char Com_Table_WriteClassOfDevice_hid[] = 
{0X01, 0x24, 0x0c, 0x03, 0x40, 0x05, 0x00};

const unsigned char Com_Table_WriteCurrentIAC_LAP[] = 
{0X01, 0X3a, 0x0c, 0x04, 0x01, 0x33, 0x8b, 0x9e}; 

const unsigned char Com_Table_WritePageScanActivity[] =
{0X01,0x1c,0x0c,0x04, 0x00,0x02,0x24,0x00};

const unsigned char Com_Table_WriteLinkPolicySettings[] =
{0x01,0x0D,0x08,0x04,0x32, 0x00,0x0a,0x00};
#ifdef _KEYBOARD__
const unsigned char Com_Table_SniffMode[] = 
{0x01,0x03,0x08,0x0a,0x32,0x00,0x00,0x03,0x30,0x00,0x01,0x00,0x00,0x00};
#else
const unsigned char Com_Table_SniffMode[] = 
{0x01,0x03,0x08,0x0a,0x32,0x00,0x40,0x00,0x12,0x00,0x01,0x00,0x00,0x00};
#endif

const unsigned char Com_Table_Forbidden_Sleep_Check[] = 
{0x01, 0xe0, 0xfc, 0x02, 0x10, 0x00};

const unsigned char Com_Table_set_32k_frequence[] = 
{ 0x01,0xE0,0xFC,0x09,0x01,0x1C,0x00,0x92,0x00,0x00,0x00,0x00,0x00};

const unsigned char Com_Table_Disable_Host_Wakeup[] = 
{0x01, 0xe0, 0xfc, 0x02, 0x0D, 0x00};

const unsigned char Com_Table_ExitSniff[] = 
{0x01, 0x04, 0x08, 0x02, 0x32, 0x00};

const unsigned char Com_Table_Change_Local_Name[] = 
{0x01,0x13, 0x0c,0x08,'H','I','D','-','B','D','&','A'};

const unsigned char Com_Table_set_local_BD_ADDR[] = 
{0X01, 0x1a, 0xfc, 0x06, 0x03, 0x6d, 0xa0,0x17,0x0d,0x00};

const unsigned char Com_Table_ReadRegister[] = 
{0x01, 0xe0, 0xfc, 0x05, 0x03, 0xA0, 0xA1, 0xA2, 0xA3};

const unsigned char Com_Table_ReadChip_ID[] = 
{0X01, 0xe0, 0xfc, 0x05, 0x03, 0x40, 0x00,0x91,0x00};

const unsigned char Com_Table_Modify_BdAddr[] = 
{0x01, 0x1a, 0xfc, 0x06, 0x00, 0x12, 0x23, 0x34, 0x45, 0x09};

const unsigned char Com_Table_EnableAutoaccept[] =
{0x01,0x05, 0x0c, 0x03, 0x02, 0x00, 0x02};

const unsigned char Com_Table_EnableDUT[]=
{ 0x01,0x03, 0x18, 0x00};

const unsigned char Com_Table_Change_Packet_Type[] = 
{0x01, 0x0f, 0x04, 0x04, 0x32, 0x00, 0x06, 0x33}; // 06 33 means all 2/3-DH1/3/5 may not be used

const unsigned char Com_Table_Read_Feature[] = 
{0x01,0x03, 0x10, 0x00};

#endif
